{"version":3,"sources":["static/FaceAPIStatic/js/faceDetectionControls.js"],"names":["SSD_MOBILENETV1","TINY_FACE_DETECTOR","MTCNN","selectedFaceDetector","minConfidence","inputSize","scoreThreshold","minFaceSize","getFaceDetectorOptions","faceapi","SsdMobilenetv1Options","TinyFaceDetectorOptions","MtcnnOptions","onIncreaseMinConfidence","Math","min","round","$","val","updateResults","onDecreaseMinConfidence","max","onInputSizeChanged","e","changeInputSize","target","value","size","parseInt","inputSizeSelect","material_select","onIncreaseScoreThreshold","onDecreaseScoreThreshold","onIncreaseMinFaceSize","onDecreaseMinFaceSize","getCurrentFaceDetectionNet","nets","ssdMobilenetv1","tinyFaceDetector","mtcnn","isFaceDetectionModelLoaded","params","changeFaceDetector","detector","forEach","id","hide","faceDetectorSelect","show","load","onSelectedFaceDetectorChanged","initFaceDetectionControls","on"],"mappings":"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","file":"faceDetectionControls.7e2e2de0.js","sourceRoot":"../src","sourcesContent":["const SSD_MOBILENETV1 = 'ssd_mobilenetv1'\nconst TINY_FACE_DETECTOR = 'tiny_face_detector'\nconst MTCNN = 'mtcnn'\n\n\nlet selectedFaceDetector = SSD_MOBILENETV1\n\n// ssd_mobilenetv1 options\nlet minConfidence = 0.5\n\n// tiny_face_detector options\nlet inputSize = 512\nlet scoreThreshold = 0.5\n\n//mtcnn options\nlet minFaceSize = 20\n\nfunction getFaceDetectorOptions() {\n  return selectedFaceDetector === SSD_MOBILENETV1\n    ? new faceapi.SsdMobilenetv1Options({ minConfidence })\n    : (\n      selectedFaceDetector === TINY_FACE_DETECTOR\n        ? new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })\n        : new faceapi.MtcnnOptions({ minFaceSize })\n    )\n}\n\nfunction onIncreaseMinConfidence() {\n  minConfidence = Math.min(faceapi.round(minConfidence + 0.1), 1.0)\n  $('#minConfidence').val(minConfidence)\n  updateResults()\n}\n\nfunction onDecreaseMinConfidence() {\n  minConfidence = Math.max(faceapi.round(minConfidence - 0.1), 0.1)\n  $('#minConfidence').val(minConfidence)\n  updateResults()\n}\n\nfunction onInputSizeChanged(e) {\n  changeInputSize(e.target.value)\n  updateResults()\n}\n\nfunction changeInputSize(size) {\n  inputSize = parseInt(size)\n\n  const inputSizeSelect = $('#inputSize')\n  inputSizeSelect.val(inputSize)\n  inputSizeSelect.material_select()\n}\n\nfunction onIncreaseScoreThreshold() {\n  scoreThreshold = Math.min(faceapi.round(scoreThreshold + 0.1), 1.0)\n  $('#scoreThreshold').val(scoreThreshold)\n  updateResults()\n}\n\nfunction onDecreaseScoreThreshold() {\n  scoreThreshold = Math.max(faceapi.round(scoreThreshold - 0.1), 0.1)\n  $('#scoreThreshold').val(scoreThreshold)\n  updateResults()\n}\n\nfunction onIncreaseMinFaceSize() {\n  minFaceSize = Math.min(faceapi.round(minFaceSize + 20), 300)\n  $('#minFaceSize').val(minFaceSize)\n}\n\nfunction onDecreaseMinFaceSize() {\n  minFaceSize = Math.max(faceapi.round(minFaceSize - 20), 50)\n  $('#minFaceSize').val(minFaceSize)\n}\n\nfunction getCurrentFaceDetectionNet() {\n  if (selectedFaceDetector === SSD_MOBILENETV1) {\n    return faceapi.nets.ssdMobilenetv1\n  }\n  if (selectedFaceDetector === TINY_FACE_DETECTOR) {\n    return faceapi.nets.tinyFaceDetector\n  }\n  if (selectedFaceDetector === MTCNN) {\n    return faceapi.nets.mtcnn\n  }\n}\n\nfunction isFaceDetectionModelLoaded() {\n  return !!getCurrentFaceDetectionNet().params\n}\n\nasync function changeFaceDetector(detector) {\n  ['#ssd_mobilenetv1_controls', '#tiny_face_detector_controls', '#mtcnn_controls']\n    .forEach(id => $(id).hide())\n\n  selectedFaceDetector = detector\n  const faceDetectorSelect = $('#selectFaceDetector')\n  faceDetectorSelect.val(detector)\n  faceDetectorSelect.material_select()\n\n  $('#loader').show()\n  if (!isFaceDetectionModelLoaded()) {\n    await getCurrentFaceDetectionNet().load('models/')\n  }\n\n  $(`#${detector}_controls`).show()\n  $('#loader').hide()\n}\n\nasync function onSelectedFaceDetectorChanged(e) {\n  selectedFaceDetector = e.target.value\n\n  await changeFaceDetector(e.target.value)\n  updateResults()\n}\n\nfunction initFaceDetectionControls() {\n  const faceDetectorSelect = $('#selectFaceDetector')\n  faceDetectorSelect.val(selectedFaceDetector)\n  faceDetectorSelect.on('change', onSelectedFaceDetectorChanged)\n  faceDetectorSelect.material_select()\n\n  const inputSizeSelect = $('#inputSize')\n  inputSizeSelect.val(inputSize)\n  inputSizeSelect.on('change', onInputSizeChanged)\n  inputSizeSelect.material_select()\n}"]}